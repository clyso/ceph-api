syntax = "proto3";

option go_package = "github.com/clyso/ceph-api/api/ceph;pb";

package ceph;

// import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


service Cluster {
    // Get cluster status
    rpc GetStatus (google.protobuf.Empty) returns (ClusterStatus);
    // Update cluster status
    rpc UpdateStatus (ClusterStatus) returns (google.protobuf.Empty);

    rpc GetUsers (google.protobuf.Empty) returns (ClusterUsers);
    rpc UpdateUser (UpdateClusterUserReq) returns (google.protobuf.Empty);
    rpc CreateUser (CreateClusterUserReq) returns (google.protobuf.Empty);
    rpc ExportUser (ExportClusterUserReq) returns (ExportClusterUserResp);
    rpc DeleteUser (DeleteClusterUserReq) returns (google.protobuf.Empty);
    rpc SearchConfig (SearchConfigRequest) returns (SearchConfigResponse);
}

message ClusterStatus{
    enum Status {
        INSTALLED=0;
        POST_INSTALLED=1;
    }
    Status status = 1;
}

message ClusterUsers{
    repeated ClusterUser users =1;
}

message ClusterUser {
    // entity, e.g: "client.admin"
    string entity = 1;
    // user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
    map<string, string> caps = 2;
    // keyring
    string key = 3;
}

message UpdateClusterUserReq{
    // user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
    map<string, string> capabilities = 1;
    // entity, e.g: "client.admin"
    string user_entity = 2 [json_name = "user_entity"];
}

message CreateClusterUserReq{
    // user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
    map<string, string> capabilities = 1;
    // entity, e.g: "client.admin"
    string user_entity = 2 [json_name = "user_entity"];
    // keyring file format - if import_data is set then other fields ignored
    bytes import_data = 3 [json_name = "import_data"];
}

message ExportClusterUserReq{
   repeated string entities = 1;
}

message DeleteClusterUserReq{
    string user_entity = 1 [json_name = "user_entity"];
}

message ExportClusterUserResp{
    // User key and capabilities in Ceph config file format
    bytes data = 1;
}

// Config Param Search 
message SearchConfigRequest {
    enum ServiceType {
        COMMON = 0;
        MON = 1;
        MDS = 2;
        OSD = 3;
        MGR = 4;
        RGW = 5;
        RBD = 6;
        RBD_MIRROR = 7;
        IMMUTABLE_OBJECT_CACHE = 8;
        MDS_CLIENT = 9;
        CEPHFS_MIRROR = 10;
        CEPH_EXPORTER = 11;
    }
    
    enum ConfigLevel {
        BASIC = 0;
        ADVANCED = 1;
        DEV = 2;
    }

    enum ParamType {
        STR = 0;
        UUID = 1;
        ADDR = 2;
        ADDRVEC = 3;
        BOOL = 4;
        INT = 5;
        FLOAT = 6;
        UINT = 7;
        SIZE = 8;
        SECS = 9;
        MILLISECS = 10;
    }
    
    enum SortField {
        NAME = 0;
        TYPE = 1;
        SERVICE = 2;
        LEVEL = 3;
    }
    
    enum SortOrder {
        ASC = 0;
        DESC = 1;
    }
    
    optional ServiceType service = 1;
    optional string name = 2;
    optional string full_text = 3;
    optional ConfigLevel level = 4;
    optional SortField sort = 5;
    optional SortOrder order = 6;
    optional ParamType type = 7;
}

message ConfigParam {
    string name = 1;
    SearchConfigRequest.ParamType type = 2;
    string level = 3;
    string desc = 4;
    string long_desc = 5;
    string default_value = 6;
    string daemon_default = 7;
    repeated string tags = 8;
    repeated string services = 9;
    repeated string see_also = 10;
    repeated string enum_values = 11;
    optional double min = 12;
    optional double max = 13;
    bool can_update_at_runtime = 14;
    repeated string flags = 15;
}

message SearchConfigResponse {
    repeated ConfigParam params = 1;
}
