// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: cluster.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterStatus_Status int32

const (
	ClusterStatus_INSTALLED      ClusterStatus_Status = 0
	ClusterStatus_POST_INSTALLED ClusterStatus_Status = 1
)

// Enum value maps for ClusterStatus_Status.
var (
	ClusterStatus_Status_name = map[int32]string{
		0: "INSTALLED",
		1: "POST_INSTALLED",
	}
	ClusterStatus_Status_value = map[string]int32{
		"INSTALLED":      0,
		"POST_INSTALLED": 1,
	}
)

func (x ClusterStatus_Status) Enum() *ClusterStatus_Status {
	p := new(ClusterStatus_Status)
	*p = x
	return p
}

func (x ClusterStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[0].Descriptor()
}

func (ClusterStatus_Status) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[0]
}

func (x ClusterStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterStatus_Status.Descriptor instead.
func (ClusterStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0, 0}
}

type SearchConfigRequest_SortField int32

const (
	SearchConfigRequest_NAME  SearchConfigRequest_SortField = 0
	SearchConfigRequest_TYPE  SearchConfigRequest_SortField = 1
	SearchConfigRequest_LEVEL SearchConfigRequest_SortField = 2
)

// Enum value maps for SearchConfigRequest_SortField.
var (
	SearchConfigRequest_SortField_name = map[int32]string{
		0: "NAME",
		1: "TYPE",
		2: "LEVEL",
	}
	SearchConfigRequest_SortField_value = map[string]int32{
		"NAME":  0,
		"TYPE":  1,
		"LEVEL": 2,
	}
)

func (x SearchConfigRequest_SortField) Enum() *SearchConfigRequest_SortField {
	p := new(SearchConfigRequest_SortField)
	*p = x
	return p
}

func (x SearchConfigRequest_SortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchConfigRequest_SortField) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[1].Descriptor()
}

func (SearchConfigRequest_SortField) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[1]
}

func (x SearchConfigRequest_SortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchConfigRequest_SortField.Descriptor instead.
func (SearchConfigRequest_SortField) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{8, 0}
}

type SearchConfigRequest_SortOrder int32

const (
	SearchConfigRequest_ASC  SearchConfigRequest_SortOrder = 0
	SearchConfigRequest_DESC SearchConfigRequest_SortOrder = 1
)

// Enum value maps for SearchConfigRequest_SortOrder.
var (
	SearchConfigRequest_SortOrder_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SearchConfigRequest_SortOrder_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SearchConfigRequest_SortOrder) Enum() *SearchConfigRequest_SortOrder {
	p := new(SearchConfigRequest_SortOrder)
	*p = x
	return p
}

func (x SearchConfigRequest_SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchConfigRequest_SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[2].Descriptor()
}

func (SearchConfigRequest_SortOrder) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[2]
}

func (x SearchConfigRequest_SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchConfigRequest_SortOrder.Descriptor instead.
func (SearchConfigRequest_SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{8, 1}
}

type ConfigParam_ServiceType int32

const (
	ConfigParam_common                 ConfigParam_ServiceType = 0
	ConfigParam_mon                    ConfigParam_ServiceType = 1
	ConfigParam_mds                    ConfigParam_ServiceType = 2
	ConfigParam_osd                    ConfigParam_ServiceType = 3
	ConfigParam_mgr                    ConfigParam_ServiceType = 4
	ConfigParam_rgw                    ConfigParam_ServiceType = 5
	ConfigParam_rbd                    ConfigParam_ServiceType = 6
	ConfigParam_rbd_mirror             ConfigParam_ServiceType = 7
	ConfigParam_immutable_object_cache ConfigParam_ServiceType = 8
	ConfigParam_mds_client             ConfigParam_ServiceType = 9
	ConfigParam_cephfs_mirror          ConfigParam_ServiceType = 10
	ConfigParam_ceph_exporter          ConfigParam_ServiceType = 11
)

// Enum value maps for ConfigParam_ServiceType.
var (
	ConfigParam_ServiceType_name = map[int32]string{
		0:  "common",
		1:  "mon",
		2:  "mds",
		3:  "osd",
		4:  "mgr",
		5:  "rgw",
		6:  "rbd",
		7:  "rbd_mirror",
		8:  "immutable_object_cache",
		9:  "mds_client",
		10: "cephfs_mirror",
		11: "ceph_exporter",
	}
	ConfigParam_ServiceType_value = map[string]int32{
		"common":                 0,
		"mon":                    1,
		"mds":                    2,
		"osd":                    3,
		"mgr":                    4,
		"rgw":                    5,
		"rbd":                    6,
		"rbd_mirror":             7,
		"immutable_object_cache": 8,
		"mds_client":             9,
		"cephfs_mirror":          10,
		"ceph_exporter":          11,
	}
)

func (x ConfigParam_ServiceType) Enum() *ConfigParam_ServiceType {
	p := new(ConfigParam_ServiceType)
	*p = x
	return p
}

func (x ConfigParam_ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigParam_ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[3].Descriptor()
}

func (ConfigParam_ServiceType) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[3]
}

func (x ConfigParam_ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigParam_ServiceType.Descriptor instead.
func (ConfigParam_ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9, 0}
}

type ConfigParam_ConfigLevel int32

const (
	ConfigParam_basic    ConfigParam_ConfigLevel = 0
	ConfigParam_advanced ConfigParam_ConfigLevel = 1
	ConfigParam_dev      ConfigParam_ConfigLevel = 2
)

// Enum value maps for ConfigParam_ConfigLevel.
var (
	ConfigParam_ConfigLevel_name = map[int32]string{
		0: "basic",
		1: "advanced",
		2: "dev",
	}
	ConfigParam_ConfigLevel_value = map[string]int32{
		"basic":    0,
		"advanced": 1,
		"dev":      2,
	}
)

func (x ConfigParam_ConfigLevel) Enum() *ConfigParam_ConfigLevel {
	p := new(ConfigParam_ConfigLevel)
	*p = x
	return p
}

func (x ConfigParam_ConfigLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigParam_ConfigLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[4].Descriptor()
}

func (ConfigParam_ConfigLevel) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[4]
}

func (x ConfigParam_ConfigLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigParam_ConfigLevel.Descriptor instead.
func (ConfigParam_ConfigLevel) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9, 1}
}

type ConfigParam_ParamType int32

const (
	ConfigParam_str       ConfigParam_ParamType = 0
	ConfigParam_uuid      ConfigParam_ParamType = 1
	ConfigParam_addr      ConfigParam_ParamType = 2
	ConfigParam_addrvec   ConfigParam_ParamType = 3
	ConfigParam_bool      ConfigParam_ParamType = 4
	ConfigParam_int       ConfigParam_ParamType = 5
	ConfigParam_float     ConfigParam_ParamType = 6
	ConfigParam_uint      ConfigParam_ParamType = 7
	ConfigParam_size      ConfigParam_ParamType = 8
	ConfigParam_secs      ConfigParam_ParamType = 9
	ConfigParam_millisecs ConfigParam_ParamType = 10
)

// Enum value maps for ConfigParam_ParamType.
var (
	ConfigParam_ParamType_name = map[int32]string{
		0:  "str",
		1:  "uuid",
		2:  "addr",
		3:  "addrvec",
		4:  "bool",
		5:  "int",
		6:  "float",
		7:  "uint",
		8:  "size",
		9:  "secs",
		10: "millisecs",
	}
	ConfigParam_ParamType_value = map[string]int32{
		"str":       0,
		"uuid":      1,
		"addr":      2,
		"addrvec":   3,
		"bool":      4,
		"int":       5,
		"float":     6,
		"uint":      7,
		"size":      8,
		"secs":      9,
		"millisecs": 10,
	}
)

func (x ConfigParam_ParamType) Enum() *ConfigParam_ParamType {
	p := new(ConfigParam_ParamType)
	*p = x
	return p
}

func (x ConfigParam_ParamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigParam_ParamType) Descriptor() protoreflect.EnumDescriptor {
	return file_cluster_proto_enumTypes[5].Descriptor()
}

func (ConfigParam_ParamType) Type() protoreflect.EnumType {
	return &file_cluster_proto_enumTypes[5]
}

func (x ConfigParam_ParamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigParam_ParamType.Descriptor instead.
func (ConfigParam_ParamType) EnumDescriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9, 2}
}

type ClusterStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ClusterStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=ceph.ClusterStatus_Status" json:"status,omitempty"`
}

func (x *ClusterStatus) Reset() {
	*x = ClusterStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatus) ProtoMessage() {}

func (x *ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatus.ProtoReflect.Descriptor instead.
func (*ClusterStatus) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterStatus) GetStatus() ClusterStatus_Status {
	if x != nil {
		return x.Status
	}
	return ClusterStatus_INSTALLED
}

type ClusterUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*ClusterUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ClusterUsers) Reset() {
	*x = ClusterUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterUsers) ProtoMessage() {}

func (x *ClusterUsers) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterUsers.ProtoReflect.Descriptor instead.
func (*ClusterUsers) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterUsers) GetUsers() []*ClusterUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type ClusterUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// entity, e.g: "client.admin"
	Entity string `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	// user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
	Caps map[string]string `protobuf:"bytes,2,rep,name=caps,proto3" json:"caps,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// keyring
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ClusterUser) Reset() {
	*x = ClusterUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterUser) ProtoMessage() {}

func (x *ClusterUser) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterUser.ProtoReflect.Descriptor instead.
func (*ClusterUser) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterUser) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *ClusterUser) GetCaps() map[string]string {
	if x != nil {
		return x.Caps
	}
	return nil
}

func (x *ClusterUser) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type UpdateClusterUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
	Capabilities map[string]string `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// entity, e.g: "client.admin"
	UserEntity string `protobuf:"bytes,2,opt,name=user_entity,proto3" json:"user_entity,omitempty"`
}

func (x *UpdateClusterUserReq) Reset() {
	*x = UpdateClusterUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterUserReq) ProtoMessage() {}

func (x *UpdateClusterUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterUserReq.ProtoReflect.Descriptor instead.
func (*UpdateClusterUserReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateClusterUserReq) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *UpdateClusterUserReq) GetUserEntity() string {
	if x != nil {
		return x.UserEntity
	}
	return ""
}

type CreateClusterUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user capabilities, e.g: {"mon": "allow r","osd":"allow rw pool=liverpool"}
	Capabilities map[string]string `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// entity, e.g: "client.admin"
	UserEntity string `protobuf:"bytes,2,opt,name=user_entity,proto3" json:"user_entity,omitempty"`
	// keyring file format - if import_data is set then other fields ignored
	ImportData []byte `protobuf:"bytes,3,opt,name=import_data,proto3" json:"import_data,omitempty"`
}

func (x *CreateClusterUserReq) Reset() {
	*x = CreateClusterUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClusterUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClusterUserReq) ProtoMessage() {}

func (x *CreateClusterUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClusterUserReq.ProtoReflect.Descriptor instead.
func (*CreateClusterUserReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *CreateClusterUserReq) GetCapabilities() map[string]string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *CreateClusterUserReq) GetUserEntity() string {
	if x != nil {
		return x.UserEntity
	}
	return ""
}

func (x *CreateClusterUserReq) GetImportData() []byte {
	if x != nil {
		return x.ImportData
	}
	return nil
}

type ExportClusterUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []string `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *ExportClusterUserReq) Reset() {
	*x = ExportClusterUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportClusterUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportClusterUserReq) ProtoMessage() {}

func (x *ExportClusterUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportClusterUserReq.ProtoReflect.Descriptor instead.
func (*ExportClusterUserReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *ExportClusterUserReq) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

type DeleteClusterUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEntity string `protobuf:"bytes,1,opt,name=user_entity,proto3" json:"user_entity,omitempty"`
}

func (x *DeleteClusterUserReq) Reset() {
	*x = DeleteClusterUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClusterUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClusterUserReq) ProtoMessage() {}

func (x *DeleteClusterUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClusterUserReq.ProtoReflect.Descriptor instead.
func (*DeleteClusterUserReq) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteClusterUserReq) GetUserEntity() string {
	if x != nil {
		return x.UserEntity
	}
	return ""
}

type ExportClusterUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User key and capabilities in Ceph config file format
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExportClusterUserResp) Reset() {
	*x = ExportClusterUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportClusterUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportClusterUserResp) ProtoMessage() {}

func (x *ExportClusterUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportClusterUserResp.ProtoReflect.Descriptor instead.
func (*ExportClusterUserResp) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{7}
}

func (x *ExportClusterUserResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Config Param Search
type SearchConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service  *ConfigParam_ServiceType       `protobuf:"varint,1,opt,name=service,proto3,enum=ceph.ConfigParam_ServiceType,oneof" json:"service,omitempty"`
	Name     *string                        `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	FullText *string                        `protobuf:"bytes,3,opt,name=full_text,json=fullText,proto3,oneof" json:"full_text,omitempty"`
	Level    *ConfigParam_ConfigLevel       `protobuf:"varint,4,opt,name=level,proto3,enum=ceph.ConfigParam_ConfigLevel,oneof" json:"level,omitempty"`
	Sort     *SearchConfigRequest_SortField `protobuf:"varint,5,opt,name=sort,proto3,enum=ceph.SearchConfigRequest_SortField,oneof" json:"sort,omitempty"`
	Order    *SearchConfigRequest_SortOrder `protobuf:"varint,6,opt,name=order,proto3,enum=ceph.SearchConfigRequest_SortOrder,oneof" json:"order,omitempty"`
	Type     *ConfigParam_ParamType         `protobuf:"varint,7,opt,name=type,proto3,enum=ceph.ConfigParam_ParamType,oneof" json:"type,omitempty"`
}

func (x *SearchConfigRequest) Reset() {
	*x = SearchConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConfigRequest) ProtoMessage() {}

func (x *SearchConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConfigRequest.ProtoReflect.Descriptor instead.
func (*SearchConfigRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{8}
}

func (x *SearchConfigRequest) GetService() ConfigParam_ServiceType {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ConfigParam_common
}

func (x *SearchConfigRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SearchConfigRequest) GetFullText() string {
	if x != nil && x.FullText != nil {
		return *x.FullText
	}
	return ""
}

func (x *SearchConfigRequest) GetLevel() ConfigParam_ConfigLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ConfigParam_basic
}

func (x *SearchConfigRequest) GetSort() SearchConfigRequest_SortField {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return SearchConfigRequest_NAME
}

func (x *SearchConfigRequest) GetOrder() SearchConfigRequest_SortOrder {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return SearchConfigRequest_ASC
}

func (x *SearchConfigRequest) GetType() ConfigParam_ParamType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ConfigParam_str
}

type ConfigParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type               ConfigParam_ParamType     `protobuf:"varint,2,opt,name=type,proto3,enum=ceph.ConfigParam_ParamType" json:"type,omitempty"`
	Level              ConfigParam_ConfigLevel   `protobuf:"varint,3,opt,name=level,proto3,enum=ceph.ConfigParam_ConfigLevel" json:"level,omitempty"`
	Desc               string                    `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	LongDesc           string                    `protobuf:"bytes,5,opt,name=long_desc,json=longDesc,proto3" json:"long_desc,omitempty"`
	DefaultValue       string                    `protobuf:"bytes,6,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	DaemonDefault      string                    `protobuf:"bytes,7,opt,name=daemon_default,json=daemonDefault,proto3" json:"daemon_default,omitempty"`
	Tags               []string                  `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Services           []ConfigParam_ServiceType `protobuf:"varint,9,rep,packed,name=services,proto3,enum=ceph.ConfigParam_ServiceType" json:"services,omitempty"`
	SeeAlso            []string                  `protobuf:"bytes,10,rep,name=see_also,json=seeAlso,proto3" json:"see_also,omitempty"`
	EnumValues         []string                  `protobuf:"bytes,11,rep,name=enum_values,json=enumValues,proto3" json:"enum_values,omitempty"`
	Min                *float64                  `protobuf:"fixed64,12,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max                *float64                  `protobuf:"fixed64,13,opt,name=max,proto3,oneof" json:"max,omitempty"`
	CanUpdateAtRuntime bool                      `protobuf:"varint,14,opt,name=can_update_at_runtime,json=canUpdateAtRuntime,proto3" json:"can_update_at_runtime,omitempty"`
	Flags              []string                  `protobuf:"bytes,15,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ConfigParam) Reset() {
	*x = ConfigParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigParam) ProtoMessage() {}

func (x *ConfigParam) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigParam.ProtoReflect.Descriptor instead.
func (*ConfigParam) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigParam) GetType() ConfigParam_ParamType {
	if x != nil {
		return x.Type
	}
	return ConfigParam_str
}

func (x *ConfigParam) GetLevel() ConfigParam_ConfigLevel {
	if x != nil {
		return x.Level
	}
	return ConfigParam_basic
}

func (x *ConfigParam) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ConfigParam) GetLongDesc() string {
	if x != nil {
		return x.LongDesc
	}
	return ""
}

func (x *ConfigParam) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *ConfigParam) GetDaemonDefault() string {
	if x != nil {
		return x.DaemonDefault
	}
	return ""
}

func (x *ConfigParam) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ConfigParam) GetServices() []ConfigParam_ServiceType {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ConfigParam) GetSeeAlso() []string {
	if x != nil {
		return x.SeeAlso
	}
	return nil
}

func (x *ConfigParam) GetEnumValues() []string {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

func (x *ConfigParam) GetMin() float64 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *ConfigParam) GetMax() float64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *ConfigParam) GetCanUpdateAtRuntime() bool {
	if x != nil {
		return x.CanUpdateAtRuntime
	}
	return false
}

func (x *ConfigParam) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type SearchConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*ConfigParam `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *SearchConfigResponse) Reset() {
	*x = SearchConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConfigResponse) ProtoMessage() {}

func (x *SearchConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConfigResponse.ProtoReflect.Descriptor instead.
func (*SearchConfigResponse) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{10}
}

func (x *SearchConfigResponse) GetParams() []*ConfigParam {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_cluster_proto protoreflect.FileDescriptor

var file_cluster_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x63, 0x65, 0x70, 0x68, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x70, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x22, 0x37, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x63, 0x61, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x37, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x3f,
	0x0a, 0x11, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xed, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3f,
	0x0a, 0x11, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x32, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2b, 0x0a,
	0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x04, 0x0a, 0x13, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08,
	0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x70,
	0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x04, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x48, 0x06,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x22, 0x2a, 0x0a, 0x09, 0x53, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x10, 0x02, 0x22, 0x1e, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfe,
	0x06, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x65,
	0x70, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x65, 0x5f, 0x61, 0x6c, 0x73, 0x6f,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x65, 0x41, 0x6c, 0x73, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x31,
	0x0a, 0x15, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x5f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63,
	0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x6d, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x6d, 0x64, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x73, 0x64, 0x10, 0x03, 0x12, 0x07,
	0x0a, 0x03, 0x6d, 0x67, 0x72, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x72, 0x67, 0x77, 0x10, 0x05,
	0x12, 0x07, 0x0a, 0x03, 0x72, 0x62, 0x64, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x72, 0x62, 0x64,
	0x5f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x69, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x6d, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x65, 0x70, 0x68, 0x66, 0x73, 0x5f,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x65, 0x70, 0x68,
	0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x10, 0x0b, 0x22, 0x2f, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x65, 0x76, 0x10, 0x02, 0x22, 0x80, 0x01, 0x0a,
	0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x74,
	0x72, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x76,
	0x65, 0x63, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x10, 0x04, 0x12, 0x07,
	0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x65, 0x63, 0x73, 0x10, 0x09,
	0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x73, 0x10, 0x0a, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22,
	0x41, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x32, 0x8c, 0x04, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x70, 0x68,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x63, 0x65,
	0x70, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x40, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x63, 0x65, 0x70, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x65,
	0x70, 0x68, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x70,
	0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x65, 0x70, 0x68, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x79, 0x73, 0x6f, 0x2f, 0x63, 0x65, 0x70, 0x68, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x65, 0x70, 0x68, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_cluster_proto_rawDescOnce sync.Once
	file_cluster_proto_rawDescData = file_cluster_proto_rawDesc
)

func file_cluster_proto_rawDescGZIP() []byte {
	file_cluster_proto_rawDescOnce.Do(func() {
		file_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_cluster_proto_rawDescData)
	})
	return file_cluster_proto_rawDescData
}

var file_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cluster_proto_goTypes = []interface{}{
	(ClusterStatus_Status)(0),          // 0: ceph.ClusterStatus.Status
	(SearchConfigRequest_SortField)(0), // 1: ceph.SearchConfigRequest.SortField
	(SearchConfigRequest_SortOrder)(0), // 2: ceph.SearchConfigRequest.SortOrder
	(ConfigParam_ServiceType)(0),       // 3: ceph.ConfigParam.ServiceType
	(ConfigParam_ConfigLevel)(0),       // 4: ceph.ConfigParam.ConfigLevel
	(ConfigParam_ParamType)(0),         // 5: ceph.ConfigParam.ParamType
	(*ClusterStatus)(nil),              // 6: ceph.ClusterStatus
	(*ClusterUsers)(nil),               // 7: ceph.ClusterUsers
	(*ClusterUser)(nil),                // 8: ceph.ClusterUser
	(*UpdateClusterUserReq)(nil),       // 9: ceph.UpdateClusterUserReq
	(*CreateClusterUserReq)(nil),       // 10: ceph.CreateClusterUserReq
	(*ExportClusterUserReq)(nil),       // 11: ceph.ExportClusterUserReq
	(*DeleteClusterUserReq)(nil),       // 12: ceph.DeleteClusterUserReq
	(*ExportClusterUserResp)(nil),      // 13: ceph.ExportClusterUserResp
	(*SearchConfigRequest)(nil),        // 14: ceph.SearchConfigRequest
	(*ConfigParam)(nil),                // 15: ceph.ConfigParam
	(*SearchConfigResponse)(nil),       // 16: ceph.SearchConfigResponse
	nil,                                // 17: ceph.ClusterUser.CapsEntry
	nil,                                // 18: ceph.UpdateClusterUserReq.CapabilitiesEntry
	nil,                                // 19: ceph.CreateClusterUserReq.CapabilitiesEntry
	(*emptypb.Empty)(nil),              // 20: google.protobuf.Empty
}
var file_cluster_proto_depIdxs = []int32{
	0,  // 0: ceph.ClusterStatus.status:type_name -> ceph.ClusterStatus.Status
	8,  // 1: ceph.ClusterUsers.users:type_name -> ceph.ClusterUser
	17, // 2: ceph.ClusterUser.caps:type_name -> ceph.ClusterUser.CapsEntry
	18, // 3: ceph.UpdateClusterUserReq.capabilities:type_name -> ceph.UpdateClusterUserReq.CapabilitiesEntry
	19, // 4: ceph.CreateClusterUserReq.capabilities:type_name -> ceph.CreateClusterUserReq.CapabilitiesEntry
	3,  // 5: ceph.SearchConfigRequest.service:type_name -> ceph.ConfigParam.ServiceType
	4,  // 6: ceph.SearchConfigRequest.level:type_name -> ceph.ConfigParam.ConfigLevel
	1,  // 7: ceph.SearchConfigRequest.sort:type_name -> ceph.SearchConfigRequest.SortField
	2,  // 8: ceph.SearchConfigRequest.order:type_name -> ceph.SearchConfigRequest.SortOrder
	5,  // 9: ceph.SearchConfigRequest.type:type_name -> ceph.ConfigParam.ParamType
	5,  // 10: ceph.ConfigParam.type:type_name -> ceph.ConfigParam.ParamType
	4,  // 11: ceph.ConfigParam.level:type_name -> ceph.ConfigParam.ConfigLevel
	3,  // 12: ceph.ConfigParam.services:type_name -> ceph.ConfigParam.ServiceType
	15, // 13: ceph.SearchConfigResponse.params:type_name -> ceph.ConfigParam
	20, // 14: ceph.Cluster.GetStatus:input_type -> google.protobuf.Empty
	6,  // 15: ceph.Cluster.UpdateStatus:input_type -> ceph.ClusterStatus
	20, // 16: ceph.Cluster.GetUsers:input_type -> google.protobuf.Empty
	9,  // 17: ceph.Cluster.UpdateUser:input_type -> ceph.UpdateClusterUserReq
	10, // 18: ceph.Cluster.CreateUser:input_type -> ceph.CreateClusterUserReq
	11, // 19: ceph.Cluster.ExportUser:input_type -> ceph.ExportClusterUserReq
	12, // 20: ceph.Cluster.DeleteUser:input_type -> ceph.DeleteClusterUserReq
	14, // 21: ceph.Cluster.SearchConfig:input_type -> ceph.SearchConfigRequest
	6,  // 22: ceph.Cluster.GetStatus:output_type -> ceph.ClusterStatus
	20, // 23: ceph.Cluster.UpdateStatus:output_type -> google.protobuf.Empty
	7,  // 24: ceph.Cluster.GetUsers:output_type -> ceph.ClusterUsers
	20, // 25: ceph.Cluster.UpdateUser:output_type -> google.protobuf.Empty
	20, // 26: ceph.Cluster.CreateUser:output_type -> google.protobuf.Empty
	13, // 27: ceph.Cluster.ExportUser:output_type -> ceph.ExportClusterUserResp
	20, // 28: ceph.Cluster.DeleteUser:output_type -> google.protobuf.Empty
	16, // 29: ceph.Cluster.SearchConfig:output_type -> ceph.SearchConfigResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cluster_proto_init() }
func file_cluster_proto_init() {
	if File_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClusterUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportClusterUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClusterUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportClusterUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cluster_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_cluster_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cluster_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cluster_proto_goTypes,
		DependencyIndexes: file_cluster_proto_depIdxs,
		EnumInfos:         file_cluster_proto_enumTypes,
		MessageInfos:      file_cluster_proto_msgTypes,
	}.Build()
	File_cluster_proto = out.File
	file_cluster_proto_rawDesc = nil
	file_cluster_proto_goTypes = nil
	file_cluster_proto_depIdxs = nil
}
